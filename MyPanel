//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.io.*;
//importe librerias para obtener los datos guardados en campos por medio del boton en java
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
//leer y guardar datos
import java.io.FileWriter;
import java.io.File;
import java.io.PrintWriter;
import java.io.IOException;
import java.io.FileReader;
import java.io.BufferedReader;

//paso 1 agregar implements
public class MyPanel extends JPanel implements ActionListener, ItemListener {
    //RNF27
    private JButton registro_boton;
    private JButton inicio_boton;
    private JButton from_buscar;
    private JButton poner_adopcion_boton;
    private JLabel reg_capt;
    private JLabel nombre_regis_capt;
    private JTextField nombre_registro;
    private JLabel usuario_regis_capt;
    private JTextField usuario_registro;
    private JLabel contra_capt;
    private JTextField contrasena_registro;
    private JLabel inicio_capt;
    private JLabel usuario_capt;
    private JTextField usuario_inicio;
    private JLabel contrasena_capt;
    private JTextField contra_inicio;
    private JLabel form_gustos;
    private JLabel personalidad_capt;
    private JLabel color_capt;
    private JLabel tamanio_capt;
    private JLabel sexo_capt;
    private JComboBox form_per;
    private JComboBox form_color;
    private JComboBox form_tamanio;
    private JComboBox form_sexo;
    private JLabel form_adopcion;
    private JLabel nombre_adop_capt;
    private JLabel direccion_capt;
    private JLabel celular_capt;
    private JLabel correo_capt;
    private JTextField nombre_adopcion;
    private JTextField direccion_adopcion; 
    private JTextField celular_adopcion;
    private JTextField correo_adopcion;
    private JButton adopcion_boton;
    private JLabel form_poner_adop;
    private JLabel edad_capt;
    private JLabel sexo_poner_adopc_capt;
    private JLabel tamanio_poner_adop_capt;
    private JLabel color_poner_adop_capt;
    private JTextField edad_poner_adopcion;
    private JTextField sexo_poner_adopcion;
    private JTextField tamanio_poner_adopcion;
    private JTextField color_poner_adop;
    private JLabel mision_capt;
    private JLabel vision_capt;
    private JLabel mision;
    private JLabel jcomp48;
    private JLabel rs_capt;
    private JLabel rs_Insta;
    private JLabel rs_face_capt;
    private JLabel contacto;
    private JLabel num_cont;
    
    // Definir variables globales
    String personalidadSeleccionada = "";
    String colorSeleccionado = "";
    String tamanioSeleccionado = "";
    String sexoSeleccionado = "";
    String informacion_usuario_registro = "";
    String informacion_contrasena_registro = "";
    
    

    
public MyPanel() {
        //construct preComponents
        String[] form_perItems = {" ", "Calmado", "Cariñoso", "Jugueton"};
        String[] form_colorItems = {" ","Negro", "Blanco", "Cafe", "Naranjado", "Manchado"};
        String[] form_tamanioItems = {" ","Pequeño", "Mediano", "Grande"};
        String[] form_sexoItems = {" ","Hembra", "Macho"};

        //construct components
        registro_boton = new JButton ("Registrarse");
        inicio_boton = new JButton ("Iniciar Sesión");
        from_buscar = new JButton ("Buscar");
        poner_adopcion_boton = new JButton ("Enviar");
        reg_capt = new JLabel ("Registro ");
        nombre_regis_capt = new JLabel ("Nombre completo");
        nombre_registro = new JTextField (5);
        usuario_regis_capt = new JLabel ("Usuario");
        usuario_registro = new JTextField (5);
        contra_capt = new JLabel ("Contraseña");
        contrasena_registro = new JTextField (5);
        inicio_capt = new JLabel ("Iniciar sesión");
        usuario_capt = new JLabel ("Usuario ");
        usuario_inicio = new JTextField (5);
        contrasena_capt = new JLabel ("Contraseña");
        contra_inicio = new JTextField (5);
        form_gustos = new JLabel ("Formulario de preferencias");
        personalidad_capt = new JLabel ("Personalidad");
        color_capt = new JLabel ("Color");
        tamanio_capt = new JLabel ("Tamaño");
        sexo_capt = new JLabel ("Sexo");
        form_per = new JComboBox (form_perItems);
        form_color = new JComboBox (form_colorItems);
        form_tamanio = new JComboBox (form_tamanioItems);
        form_sexo = new JComboBox (form_sexoItems);
        form_adopcion = new JLabel ("Formulario de adopcion");
        nombre_adop_capt = new JLabel ("Nombre");
        direccion_capt = new JLabel ("Dirección");
        celular_capt = new JLabel ("Celular");
        correo_capt = new JLabel ("Correo");
        nombre_adopcion = new JTextField (5);
        direccion_adopcion = new JTextField (5);
        celular_adopcion = new JTextField (5);
        correo_adopcion = new JTextField (5);
        adopcion_boton = new JButton ("Enviar");
        form_poner_adop = new JLabel ("Formulario poner en adopción");
        edad_capt = new JLabel ("Edad");
        sexo_poner_adopc_capt = new JLabel ("Sexo");
        tamanio_poner_adop_capt = new JLabel ("Tamaño");
        color_poner_adop_capt = new JLabel ("Color");
        edad_poner_adopcion = new JTextField (5);
        sexo_poner_adopcion = new JTextField (5);
        tamanio_poner_adopcion = new JTextField (5);
        color_poner_adop = new JTextField (5);
        //RS17
        mision_capt = new JLabel ("Misión");
        vision_capt = new JLabel ("Visión");
        mision = new JLabel ("Conectar personas y animales a través de la adopción responsable. ");
        jcomp48 = new JLabel ("Un mundo donde cada animal tenga un hogar lleno de amor.");
        //RS23
        rs_capt = new JLabel ("Redes sociales");
        rs_Insta = new JLabel ("Instagram");
        rs_face_capt = new JLabel ("Fundación Huellas Solidarias");
        //RS19
        contacto = new JLabel ("Contacto");
        num_cont = new JLabel ("315 367 4857");

        //adjust size and set layout
        setPreferredSize (new Dimension (944, 563));
        setLayout (null);
        
        
        add (registro_boton);
        registro_boton.addActionListener(this);
        add (inicio_boton);
        inicio_boton.addActionListener(this);
        add (from_buscar);
        from_buscar.addActionListener(this);
        add (poner_adopcion_boton);
        poner_adopcion_boton.addActionListener(this);
        add (reg_capt);
        add (nombre_regis_capt);
        add (nombre_registro);
        add (usuario_regis_capt);
        add (usuario_registro);
        add (contra_capt);
        add (contrasena_registro);
        add (inicio_capt);
        add (usuario_capt);
        add (usuario_inicio);
        add (contrasena_capt);
        add (contra_inicio);
        add (form_gustos);
        add (personalidad_capt);
        add (color_capt);
        add (tamanio_capt);
        add (sexo_capt);
        add (form_per);
        form_per.addItemListener(this);
        add (form_color);
        form_color.addItemListener(this);
        add (form_tamanio);
        form_tamanio.addItemListener(this);
        add (form_sexo);
        form_sexo.addItemListener(this);
        add (form_adopcion);
        add (nombre_adop_capt);
        add (direccion_capt);
        add (celular_capt);
        add (correo_capt);
        add (nombre_adopcion);
        add (direccion_adopcion);
        add (celular_adopcion);
        add (correo_adopcion);
        add (adopcion_boton);
        adopcion_boton.addActionListener(this);
        add (form_poner_adop);
        add (edad_capt);
        add (sexo_poner_adopc_capt);
        add (tamanio_poner_adop_capt);
        add (color_poner_adop_capt);
        add (edad_poner_adopcion);
        add (sexo_poner_adopcion);
        add (tamanio_poner_adopcion);
        add (color_poner_adop);
        add (mision_capt);
        add (vision_capt);
        add (mision);
        add (jcomp48);
        add (rs_capt);
        add (rs_Insta);
        add (rs_face_capt);
        add (contacto);
        add (num_cont);

        //set component bounds (only needed by Absolute Positioning)
        registro_boton.setBounds (68, 160, 105, 25);
        inicio_boton.setBounds (315, 120, 115, 25);
        from_buscar.setBounds (62, 414, 105, 25);
        reg_capt.setBounds (88, 5, 100, 25);
        nombre_regis_capt.setBounds (15, 35, 104, 25);
        nombre_registro.setBounds (135, 35, 100, 25);
        usuario_regis_capt.setBounds (15, 75, 100, 25);
        usuario_registro.setBounds (135, 75, 100, 25);
        contra_capt.setBounds (15, 115, 100, 25);
        contrasena_registro.setBounds (135, 115, 100, 25);
        inicio_capt.setBounds (315, 5, 100, 25);
        usuario_capt.setBounds (290, 35, 100, 25);
        usuario_inicio.setBounds (365, 35, 100, 25);
        contrasena_capt.setBounds (290, 75, 100, 25);
        contra_inicio.setBounds (365, 75, 100, 25);
        form_gustos.setBounds (55, 210, 195, 25);
        personalidad_capt.setBounds (15, 245, 100, 25);
        color_capt.setBounds (15, 285, 100, 25);
        tamanio_capt.setBounds (15, 325, 100, 25);
        sexo_capt.setBounds (15, 365, 97, 25);
        form_per.setBounds (135, 245, 100, 25);
        form_color.setBounds (135, 285, 100, 25);
        form_tamanio.setBounds (135, 325, 100, 25);
        form_sexo.setBounds (135, 365, 100, 25);
        form_adopcion.setBounds (315, 210, 165, 25);
        nombre_adop_capt.setBounds (300, 245, 100, 25);
        direccion_capt.setBounds (300, 285, 100, 25);
        celular_capt.setBounds (300, 325, 100, 25);
        correo_capt.setBounds (300, 365, 100, 25);
        nombre_adopcion.setBounds (370, 245, 100, 25);
        direccion_adopcion.setBounds (370, 285, 100, 25);
        celular_adopcion.setBounds (370, 325, 100, 25);
        correo_adopcion.setBounds (370, 365, 100, 25);
        adopcion_boton.setBounds (345, 414, 100, 25);
        form_poner_adop.setBounds (526, 210, 185, 25);
        edad_capt.setBounds (525, 245, 100, 25);
        sexo_poner_adopc_capt.setBounds (525, 285, 100, 25);
        tamanio_poner_adop_capt.setBounds (525, 325, 100, 25);
        color_poner_adop_capt.setBounds (525, 365, 100, 25);
        edad_poner_adopcion.setBounds (600, 245, 100, 25);
        sexo_poner_adopcion.setBounds (600, 285, 100, 25);
        tamanio_poner_adopcion.setBounds (600, 325, 100, 25);
        color_poner_adop.setBounds (600, 365, 100, 25);
        poner_adopcion_boton.setBounds (570, 414, 100, 25);
        mision_capt.setBounds (30, 475, 100, 25);
        vision_capt.setBounds (30, 510, 100, 25);
        mision.setBounds (95, 475, 395, 30);
        jcomp48.setBounds (95, 510, 350, 25);
        rs_capt.setBounds (715, 475, 100, 25);
        rs_Insta.setBounds (635, 500, 100, 25);
        rs_face_capt.setBounds (710, 500, 180, 25);
        contacto.setBounds (640, 525, 100, 25);
        num_cont.setBounds (710, 525, 100, 25);
        
        
        
        // para que no deje presionar los botones si no se ha registrado
        form_gustos.setEnabled(false);
        personalidad_capt.setEnabled(false);
        color_capt.setEnabled(false);
        tamanio_capt.setEnabled(false);
        sexo_capt.setEnabled(false);
        form_per.setEnabled(false);
        form_color.setEnabled(false);
        form_tamanio.setEnabled(false);
        form_sexo.setEnabled(false);
        from_buscar.setEnabled(false);
    }
    
    public void actionPerformed(ActionEvent e) {
        //RE4
    if (e.getSource() == registro_boton) {
            //1. obtener información 
            String informacion_nombre_registro = nombre_registro.getText();
            informacion_usuario_registro = usuario_registro.getText();
            informacion_contrasena_registro = contrasena_registro.getText();
            // prolema de asignacion de variable
            JOptionPane.showMessageDialog(this, "Querido/a " + informacion_usuario_registro + " su cuenta ha sido creada");
            //2.buscar la BD
            //RP14
            //3.Guardar info
            //RE10
            File f= new File ("BD_usuarios.txt");
            FileWriter writer = null;
            PrintWriter pw = null;
            
            if (!f.exists()){
                try {
                    f.createNewFile();
                }catch(IOException exception){
                    System.err.println("Error creando el archivo");
                }
            }
            try {
                writer = new FileWriter("BD_usuarios.txt",true);
                pw = new PrintWriter (writer);
                pw.println(informacion_nombre_registro + "," + informacion_usuario_registro + "," + informacion_contrasena_registro);
            }catch (IOException exception){
                System.err.println("Error abriendo el archivo");
            }finally{
                try{
                    if (null != writer)
                       writer.close();
                }catch (Exception e2){
                    e2.printStackTrace();
                }
            } 
        }
        
    if (e.getSource() == inicio_boton) {
        //RE6
            String informacion_usuario_inicio = usuario_inicio.getText();
            String informacion_contra_inicio = contra_inicio.getText();
            //me arroja contra y usuarios
            JOptionPane.showMessageDialog(this,informacion_contra_inicio); 
        
            File archivo = null;
            FileReader fr = null;
            BufferedReader br = null;
            //2.buscar la BD
            //RP14
            //3.Guardar info
            try{
                // apertura del fichero y creacion de bufferedReader para poder leerlo
                archivo = new File ("BD_usuarios.txt");
                fr = new FileReader (archivo);
                br = new BufferedReader(fr);
                //JOptionPane.showMessageDialog(this,informacion_contrasena_registro);
                
                // lectura del fichero
                
                String linea;
                while ((linea=br.readLine())!=null){
                    if (!linea.equals(" ")){
                        String[] lista = linea.split(",");
                        String informacion_usuario_registro = lista[0];
                        String informacion_contrasena_registro = lista[1];
                        JOptionPane.showMessageDialog(this,informacion_contrasena_registro);
                        
                        
                        if(informacion_usuario_inicio.equals(usuario_inicio_bd) && informacion_contra_inicio.equals(contrasena_inicio_bd)){
                            //RS20
                            System.out.println("Bienvenido/a");
                            form_gustos.setEnabled(true);
                            personalidad_capt.setEnabled(true);
                            color_capt.setEnabled(true);
                            tamanio_capt.setEnabled(true);
                            sexo_capt.setEnabled(true);
                            form_per.setEnabled(true);
                            form_color.setEnabled(true);
                            form_tamanio.setEnabled(true);
                            form_sexo.setEnabled(true);
                            from_buscar.setEnabled(true);
                            break;
                            
                        }
                    }
                }
            }catch(Exception ex){
                ex.printStackTrace();
        }finally{
              try{
                if (null!= fr){
                    fr.close();
                }
            }catch (Exception e2){
                e2.printStackTrace();
            }
        }
    }
    if (e.getSource() == adopcion_boton) {
        
            //1.obtener la info de los campos de texto
            //RE1
            String informacion_nombre_adopcion = nombre_adopcion.getText();
            String informacion_direccion_adopcion = direccion_adopcion.getText();
            String informacion_celular_adopcion = celular_adopcion.getText();
            String informacion_correo_adopcion = correo_adopcion.getText();
            
            //condicion de que los campos tienen que estar llenos para que se guarde la informacion en bd
            if (informacion_nombre_adopcion.isEmpty() ||
                informacion_direccion_adopcion.isEmpty() ||
                informacion_celular_adopcion.isEmpty() ||
                informacion_correo_adopcion.isEmpty()) {
                   JOptionPane.showMessageDialog(this, "Por favor llena todos los campos de texto"); 
                }else{
                     //2. guardamos todos los datos en un string concatenandolos y  poniendoles un salto de linea
                     //RPE8
                    String datos_guardar_adopcion = "\n"+"Nombre: " + informacion_nombre_adopcion +"\n"+
                                                    "Direccion: " + informacion_direccion_adopcion + "\n"+
                                                    "Celular: " + informacion_celular_adopcion +"\n"+
                                                    "Correo: " + informacion_correo_adopcion;
                    String ruta_bd_adoptantes = "BD_adoptantes.txt";
                //try para leer y guardar datos, y catch para manejar problema si hay un error al intentar escribir en el archivo
                    try{
                    //creamos clase filewriter para que los datos se guarden en un archivo de forma continua
                    FileWriter writer = new FileWriter("BD_adoptantes.txt",true);                        
                    writer.write(datos_guardar_adopcion);
                    writer.close();
                    //RS21 y RP13
                    JOptionPane.showMessageDialog(this, "Tu información será revisada por la fundación correspondiente. Pronto nos contactaremos contigo a "+informacion_correo_adopcion +" o al número "+informacion_celular_adopcion);
                    //limpiamos campos de texto
                    nombre_adopcion.setText("");  
                    direccion_adopcion.setText(""); 
                    celular_adopcion.setText(""); 
                    correo_adopcion.setText("");
                    //manejo de excepciones/errores
                    } catch(IOException ex) {
               ex.printStackTrace();
               JOptionPane.showMessageDialog(this,"Ha ocurrido un error, intentelo de nuevo");
               }    
                }
        }
        if (e.getSource() == poner_adopcion_boton) {
            //RE2
           String informacion_edad_poner_adopcion = edad_poner_adopcion.getText();
           String informacion_sexo_poner_adopcion = sexo_poner_adopcion.getText();
           String informacion_tamanio_poner_adopcion = tamanio_poner_adopcion.getText();
           String informacion_color_poner_adop = color_poner_adop.getText();

           if (informacion_edad_poner_adopcion.isEmpty() ||
               informacion_sexo_poner_adopcion.isEmpty() ||
               informacion_tamanio_poner_adopcion.isEmpty() ||
               informacion_color_poner_adop.isEmpty()){
                   JOptionPane.showMessageDialog(this, "Por favor llena todos los campos de texto");
                   
           } else{
               //RPE9
           String datos_guardar_poner_adopcion = "Edad: " + informacion_edad_poner_adopcion + "\n" +
                                                 "Sexo: " + informacion_sexo_poner_adopcion + "\n" +
                                                 "Tamaño: " + informacion_tamanio_poner_adopcion + "\n" +
                                                 "Color: " + informacion_color_poner_adop + "\n" +
                                                 "\n";
           String ruta_bd_poner_adopcion = "BD_poner_en_adopcion.txt";
           try {
               FileWriter writer = new FileWriter(ruta_bd_poner_adopcion,true);
               writer.write(datos_guardar_poner_adopcion);
               writer.close();
               //RS21
               JOptionPane.showMessageDialog(this, "Tu información será enviada a las fundaciones, las cuales se pondrán en contacto contigo prontamente");
               
               edad_poner_adopcion.setText("");
               sexo_poner_adopcion.setText("");
               tamanio_poner_adopcion.setText("");
               color_poner_adop.setText("");
           } catch (IOException ex) {
               ex.printStackTrace();
               JOptionPane.showMessageDialog(this,"Ha ocurrido un error, intentelo de nuevo");
               }
           }
            
    }
        if (e.getSource() == from_buscar) {
            // 1. Traer las características del formulario -> variables globales
            //RE3
          System.out.println("Personalidad seleccionada: " + personalidadSeleccionada);
          System.out.println("Color seleccionada: " + colorSeleccionado);
          System.out.println("Tamaño seleccionado: " + tamanioSeleccionado);
          System.out.println("Sexo seleccionado: " + sexoSeleccionado);
          
          // abrir - leer - buscar
          File archivo = null;
          FileReader fr = null;
          BufferedReader br = null;
          
          try {
            // Apertura del fichero y creacion de BufferedReader para poder
             // hacer una lectura comoda (disponer del metodo readLine()).
             //RP12
             archivo = new File ("BD_mascotas.txt");
             fr = new FileReader (archivo);
             br = new BufferedReader(fr);

             // Lectura del fichero
             String linea = br.readLine();
             boolean found = false;
             while (linea!=null){
                 //declar variables
            String[] lista=linea.split("-");
            
            String mascota=lista[0];
            String personalidad = lista[1];      
            String color = lista[2];
            String tamanio = lista[3];
            String sexo= lista[4];
            //RS16

            if(personalidadSeleccionada.equals(personalidad)&&colorSeleccionado.equals(color)&&tamanioSeleccionado.equals(tamanio)&&sexoSeleccionado.equals(sexo)){
                System.out.println("mascota encontrada: "+mascota+"\n");
                found = true;
                break;
          }else{
            linea = br.readLine();
            
          }
        }
            //RS18
        if(!found){
            System.out.println("No tenemos mascota con esas caracteristicas, intenta con otras o te enviaremos un correo cuando encontremos una con esas caracteristicas"+"\n");
        }
    }
    catch (Exception ex) {
        ex.printStackTrace();
    }finally{ 
        // En el finally cerramos el fichero, para asegurarnos
         // que se cierra tanto si todo va bien como si salta 
         // una excepcion.
        try{
             if( null != fr ){   
               fr.close();     
            }  
        }catch (Exception e2){ 
            e2.printStackTrace();
            }
        }
    }
}

        //JCOMBOBOX       
public void itemStateChanged(ItemEvent e) {
    if (e.getSource() == form_per) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                // Obtener la opción seleccionada en form_per
                personalidadSeleccionada = (String) form_per.getSelectedItem();
            }
    }
    if (e.getSource() == form_color) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                colorSeleccionado = (String) form_color.getSelectedItem();
            }
    }
    if (e.getSource() == form_tamanio) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                // Obtener la opción seleccionada en form_per
                tamanioSeleccionado = (String) form_tamanio.getSelectedItem();
            }
    }
    if (e.getSource() == form_sexo){
            if  (e.getStateChange() == ItemEvent.SELECTED) {
                // Obtener la opción seleccionada en form_per
                sexoSeleccionado = (String) form_sexo.getSelectedItem();
            }
    }
    }
    
public static void main (String[] args) {
        JFrame frame = new JFrame ("MyPanel");
        frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add (new MyPanel());
        frame.pack();
        frame.setVisible (true);       
    }   
}
   
